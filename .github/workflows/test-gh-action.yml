name: "Docker build and push API service to ghcr.io"

on:
  schedule:
    - cron: '0 3 * * *'  # Nightly at 3 AM UTC
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  SERVICE: api
  REGISTRY: ghcr.io
  REPO: ${{ github.repository }}
  REPO_OWNER: ${{ github.repository_owner }}
  EVENT: ${{ github.event_name }}
  PR_NUM: ${{ github.event.pull_request.number }}

jobs:
  build-test-and-push:
    name: "Build and push"
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write  # Needed to push to GHCR

    steps:
      - name: Set ENV vars
        run: |
          echo "REPO_NAME=${REPO#$REPO_OWNER/}" >> "$GITHUB_ENV"

          if [[ "$EVENT" == "schedule" ]]; then
            echo "TAG=nightly" >> "$GITHUB_ENV"
          elif [[ "$EVENT" == "push" ]]; then
            echo "TAG=latest" >> "$GITHUB_ENV"
          elif [[ "$EVENT" == "pull_request" ]]; then
            echo "TAG=pr-$PR_NUM" >> "$GITHUB_ENV"
          else
            echo "TAG=unknown" >> "$GITHUB_ENV"
          fi

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build and start container (as backing service)
        run: |
          docker compose up --build --detach $SERVICE

      - name: Wait for container to be ready
        run: |
          RETRIES=10
          for i in `seq 1 $RETRIES`; do
            echo "Checking health... attempt $i"
            status=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:80/health || true)
            if [ "$status" == "200" ]; then
              echo "✅ Health check passed!"
              exit 0
            fi
            sleep 5
          done
          echo "❌ Health check failed after $RETRIES retries."
          docker compose logs
          exit 1

      - name: Report available Docker images
        run: |
          echo "$(docker images)"

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag and push image
        run: |
          registry="$(echo $REGISTRY | tr '[:upper:]' '[:lower:]')"
          repo_owner="$(echo $REPO_OWNER | tr '[:upper:]' '[:lower:]')"
          repo_name="$(echo $REPO_NAME | tr '[:upper:]' '[:lower:]')"
          service="$(echo $SERVICE | tr '[:upper:]' '[:lower:]')"
          tag="$(echo $TAG | tr '[:upper:]' '[:lower:]')"
          image_name_with_tag="$repo_name-$service:$tag"
          source_image="$image_name_with_tag"
          target_image="$registry/$repo_owner/$image_name_with_tag"

          echo "$source_image"
          echo "$target_image"

          docker tag $source_image $target_image
          docker push $target_image

      - name: Clean up
        run: docker compose down
