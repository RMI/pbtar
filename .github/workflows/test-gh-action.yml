name: "Docker build API service"

on:
  schedule:
    - cron: '0 3 * * *'  # Nightly at 3 AM UTC
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  SERVICE: api
  REGISTRY: ghcr.io
  REPO: ${{ github.repository }}
  REPO_OWNER: ${{ github.repository_owner }}
  EVENT: ${{ github.event_name }}
  PR_NUM: ${{ github.event.pull_request.number }}

jobs:
  build-test-and-push:
    name: "Build, test, and push"
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write  # Needed to push to GHCR

    steps:
      - name: Set ENV vars
        run: |
          echo "REPO_NAME=${REPO#$REPO_OWNER/}" >> "$GITHUB_ENV"

          if [[ "$EVENT" == "schedule" ]]; then
            echo "TAG=nightly" >> "$GITHUB_ENV"
          elif [[ "$EVENT" == "push" ]]; then
            echo "TAG=latest" >> "$GITHUB_ENV"
          elif [[ "$EVENT" == "pull_request" ]]; then
            echo "TAG=pr-$PR_NUM" >> "$GITHUB_ENV"
          else
            echo "TAG=unknown" >> "$GITHUB_ENV"
          fi

      - name: Report ENV vars
        run: |
          echo "SERVICE=$SERVICE"
          echo "REGISTRY=$REGISTRY"
          echo "REP0=$REPO"
          echo "REPO_OWNER=$REPO_OWNER"
          echo "EVENT=$EVENT"
          echo "PR_NUM=$PR_NUM"
          echo "REPO_NAME=$REPO_NAME"
          echo "TAG=$TAG"

      - name: Test generating image names
        run: |
          registry="$(echo $REGISTRY | tr '[:upper:]' '[:lower:]')"
          repo_owner="$(echo $REPO_OWNER | tr '[:upper:]' '[:lower:]')"
          repo_name="$(echo $REPO_NAME | tr '[:upper:]' '[:lower:]')"
          service="$(echo $SERVICE | tr '[:upper:]' '[:lower:]')"
          tag="$(echo $TAG | tr '[:upper:]' '[:lower:]')"
          image_name_with_tag="$repo_name-$service:$tag"
          source_image="$image_name_with_tag"
          target_image="$registry/$repo_owner/$image_name_with_tag"
          echo "$source_image"
          echo "$target_image"
