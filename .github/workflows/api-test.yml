name: Test API service

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: "Run unit and integration tests"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "api/.python-version"

      - name: Install the  project
        run: uv sync --all-extras --dev --directory api

      - name: Start database service
        run: |
          docker compose up -d db

      - name: Wait for database to be ready
        run: |
          attempt=1
          max_attempts=30
          until docker compose ps | grep "db" | grep -q "healthy" || [ $attempt -eq $max_attempts ]
          do
            echo "Waiting for database to be ready... (attempt $attempt/$max_attempts)"
            sleep 2
            attempt=$((attempt+1))
          done

          if [ $attempt -eq $max_attempts ]; then
            echo "Database failed to become ready in time"
            docker compose logs db
            exit 1
          fi

      - name: "Run tests"
        run: |
          set -o pipefail
          uv run --directory api pytest --junitxml=pytest.xml --cov-report=term-missing:skip-covered --cov=src tests/ | tee pytest-coverage.txt

      - name: "Pytest coverage comment"
        uses: MishaKav/pytest-coverage-comment@main
        if: github.actor != 'dependabot[bot]'
        with:
          pytest-coverage-path: ./pytest-coverage.txt
          junitxml-path: ./api/pytest.xml
